plugins {
    id 'java'
    id 'com.github.johnrengelman.shadow' version '7.1.2'
}

group = 'com.Zestarr'
version = '1.0'

repositories {
    mavenCentral()
    maven {
        name = 'spigotmc-repo'
        url = 'https://hub.spigotmc.org/nexus/content/repositories/snapshots/'
    }
    maven {
        name = 'sonatype'
        url = 'https://oss.sonatype.org/content/groups/public/'
    }
    maven { url = "https://repo.aikar.co/content/groups/aikar/" }
}

compileJava {
    options.compilerArgs += ["-parameters"]
    options.fork = true
    options.forkOptions.executable = 'javac'
}

dependencies {
    compileOnly('org.spigotmc:spigot-api:1.19.2-R0.1-SNAPSHOT')


    compileOnly 'org.projectlombok:lombok:1.18.24'
    annotationProcessor 'org.projectlombok:lombok:1.18.24'

    testCompileOnly 'org.projectlombok:lombok:1.18.24'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.24'

    compileOnly "org.spigotmc:spigot-api:1.15.2-R0.1-SNAPSHOT"
    implementation "co.aikar:acf-paper:0.5.1-SNAPSHOT"

    implementation 'com.squareup.moshi:moshi:1.14.0'

}

shadowJar {
    relocate 'co.aikar.commands', 'com.zestarr.pluginportal.acf'
    relocate 'co.aikar.locales', 'com.zestarr.pluginportal.locales'
}

def targetJavaVersion = 17
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

//compileKotlin {
//    kotlinOptions.javaParameters = true
//}

tasks.withType(JavaCompile).configureEach {
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release = targetJavaVersion
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}

build.dependsOn shadowJar